{"version":3,"sources":["logo.svg","componets/firebase/config.js","componets/firebase/index.js","componets/Login.js","componets/Slides.js","componets/Home.js","componets/Contact.js","componets/Profile.js","componets/About.js","componets/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","config","auth","Login","setSession","useState","username","setUsername","password","setPassword","handleLogin","a","signInWithEmailAndPassword","response","user","isLoggedIn","currentUser","errorMessage","message","handleRegister","createUserWithEmailAndPassword","essage","type","placeholder","onChange","event","target","value","onClick","items","src","Example","props","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","map","item","CarouselItem","onExiting","onExited","key","alt","altText","CarouselCaption","captionText","caption","captionHeader","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","Component","App","session","useEffect","handleAuth","onAuthStateChanged","className","logo","href","rel","email","signOut","then","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3f80f54e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCWgDlD-BfcfMicTthfQ_b9z4BfgqGyHvU\",\r\n    authDomain: \"qpmt51.firebaseapp.com\",\r\n    databaseURL: \"https://qpmt51.firebaseio.com\",\r\n    projectId: \"qpmt51\",\r\n    storageBucket: \"qpmt51.appspot.com\",\r\n    messagingSenderId: \"665573752527\",\r\n    appId: \"1:665573752527:web:cb30cca6b826358e80c1ba\",\r\n    measurementId: \"G-9DWLFF9FC7\"\r\n  };\r\n  export default firebaseConfig;","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport config from './config'\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config)\r\n}\r\n\r\nexport default firebase.auth()","import React, { useState } from 'react';\r\n\r\nimport auth from './firebase';\r\n\r\nconst Login = ({ setSession }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await auth.signInWithEmailAndPassword(\r\n        username,\r\n        password\r\n      );\r\n\r\n      const { user } = response;\r\n\r\n      setSession({\r\n        isLoggedIn: true,\r\n        currentUser: user\r\n      });\r\n    } catch (error) {\r\n      setSession({\r\n        isLoggedIn: false,\r\n        currentUser: null,\r\n        errorMessage: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await auth.createUserWithEmailAndPassword(\r\n        username,\r\n        password\r\n      );\r\n\r\n      const { user } = response;\r\n\r\n      setSession({\r\n        isLoggedIn: true,\r\n        currentUser: user\r\n      });\r\n    } catch (error) {\r\n      setSession({\r\n        isLoggedIn: false,\r\n        currentUser: null,\r\n        errorMessage: error.essage\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUsername = event => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const handlePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"email\" placeholder=\"Email\" onChange={handleUsername} />\r\n      <input type=\"password\" placeholder=\"Password\" onChange={handlePassword} />\r\n\r\n      <button type=\"button\" onClick={handleLogin}>\r\n        Login\r\n      </button>\r\n\r\n      <button type=\"button\" onClick={handleRegister}>\r\n        Register\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption\r\n} from 'reactstrap';\r\n\r\nconst items = [\r\n  {\r\n    \r\n    src: './images/qpm1.jpg',\r\n  },\r\n  {\r\n    src: './images/bg2.jpg',\r\n    \r\n  },\r\n  {\r\n    src: './images/tw1.jpg',\r\n   \r\n  }\r\n];\r\n\r\nconst Example = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  const slides = items.map((item) => {\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={item.src}\r\n      >\r\n        <img src={item.src} alt={item.altText} />\r\n        <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Carousel\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n    >\r\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n      {slides}\r\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default Example;","import React, { Component } from 'react'\r\nimport { Button, Jumbotron  ,Card,  CardImg, CardTitle, CardText, CardGroup,\r\n    CardSubtitle, CardBody } from 'reactstrap';\r\nimport Slides from './Slides';\r\nimport { darkblue, red } from 'color-name';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n             \r\n              <h1 align = 'center'>    <div class=\"city\"> <Slides/> </div> </h1>\r\n              <br></br><br></br>\r\n               <h1 align = 'center'> \r\n                 <img src = \"./images/el.png\"/> </h1> \r\n                 <br></br><br></br>\r\n                 <h1 align = 'center'>     <h1 class=\"display-1\">หลักสูตร</h1> </h1>\r\n               <br></br>\r\n               <hr width=\"1200\" color = \"white\" size=\"270\" />\r\n               <br></br>   <br></br>\r\n                <div class=\"container-fluid\">\r\n                \r\n    <CardGroup>\r\n    <Card className = \"bg-secondary text-white\">\r\n      <float-right> <CardImg width=\"495\" height=\"257\" src=\"./images/ac.png\" alt=\"Card image cap\" /></float-right>\r\n        <CardBody>\r\n          <CardTitle>บัญชี</CardTitle>\r\n          <CardText>เรียนรู้วิธีการรับเงินสด/เช็ค/เงินโอน การออกใบเสร็จรับเงินโดย QM-Soft และ QOS</CardText>\r\n          <Button color=\"light\"href=\"/Ac\">เข้าสู่หลักสูตร</Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Card className = \"bg-secondary text-white\">\r\n        <CardImg width=\"495\" height=\"257\" src=\"./images/en.png\" alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle>วิศวกรรม</CardTitle>\r\n          <CardText>หลักสูตรสำหรับช่างใหม่ และหลากหลายคำถามระบบการทำงานที่มี</CardText>\r\n          <Button color=\"light\"href=\"/En\">เข้าสู่หลักสูตร</Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Card className = \"bg-secondary text-white\">\r\n        <CardImg width=\"495\" height=\"257\" src=\"./images/lw.jpg\" alt=\"Card image cap\" />\r\n        <CardBody>\r\n          <CardTitle>กฎหมาย</CardTitle>\r\n          <CardText>หลักสูตรที่ผู้จัดการบ้านพลาดไม่ได้สำหรับข้อกฎหมายอาคารชุด/พรบ.จัดสรรที่ดิน</CardText>\r\n          <Button color=\"light\"href=\"/Lw\">เข้าสู่หลักสูตร</Button>\r\n        </CardBody>\r\n      </Card>\r\n    </CardGroup>\r\n    </div>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <p align=\"center\">  <h1>ติดต่อเรา </h1>\r\n                    165/285 อาคารสารินเพลส ชั้น 5 (ตรงข้ามธนาคารไทยพาณิชย์สำนักงานใหญ่) ซอยรัชดาภิเษก 46 ถนนรัชดาภิเษก แขวงลาดยาว เขตจตุจักร กรุงเทพมหานคร 10900\r\n<br></br>โทร. 02-930-3418   |   แฟกซ์. 02-939-6906   |   อีเมล์. info@qpm.co.th </p>\r\n                <p align=\"center\"><img src=\"./images/maps.png\" /> </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                ตัวเรา\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n             <p align=\"center\">    <h1>บริษัท ควอลิตี้ พรอพเพอร์ตี้ แมเนจเม้นท์ จำกัด </h1> \r\nบริษัท ควอลิตี้ พรอพเพอร์ตี้ แมเนจเม้นท์ จำกัด (QPM) ก่อตั้งขึ้นในปีพ.ศ. 2538 ด้วยทุนจดทะเบียน 10 ล้านบาท \r\nโดยทีมงานที่มีประสบการณ์และชื่อเสียงด้านบริหารจัดการอสังหาริมทรัพย์ มากกว่า 20 ปี ด้วยความมุ่งมั่นที่จะพัฒนาระบบการบริการ \r\nทั้งด้านประสิทธิภาพและคุณภาพ ตามข้อกำหนดมาตรฐานสากลอย่างต่อเนื่อง \r\nทำให้บริษัทฯได้รับการรับรองระบบบริหารงานคุณภาพมาตั้งแต่ พ.ศ. 2547 จนปัจจุบัน บริษัทฯได้รับการรับรองมาตรฐานคุณภาพ ISO 9001:2015 จาก บริษัท บูโร เวอริทัส (ประเทศไทย) \r\nเป็นรายแรกในประเทศไทย อีกทั้ง ยังเป็นบริษัทบริหารทรัพย์สินรายแรกในประเทศไทย ที่ได้รับการรับรองในด้านการบริหารจัดการงานรักษาความปลอดภัยในชุมชนอีกด้วย\r\n         </p>   </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                เนื้อหาทั้งหมดบนเว็บไซต์นี้ มีขึ้นเพื่อวัตถุประสงค์ในการให้ข้อมูลและเพื่อการศึกษาเท่านั้น ตลาดหลักทรัพย์ฯ มิได้ให้การรับรองและขอปฏิเสธต่อความรับผิดใด ๆ ในเว็บไซต์นี้\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport Login from './componets/Login';\r\nimport auth from './componets/firebase';\r\nimport  Home from  './componets/Home'\r\nimport Contact from './componets/Contact'\r\nimport Product from './componets/Product'\r\nimport Profile from './componets/Profile';\r\nimport About from './componets/About';\r\nimport Header from './componets/Header';\r\nimport Footer from './componets/Footer';\r\nimport Ac from './componets/Ac';\r\nimport En from './componets/En';\r\nimport Lw from './componets/Lw';\r\nimport register from './componets/register';\r\nimport Qa from './componets/Qa';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [session, setSession] = useState({\r\n    isLoggedIn: false,\r\n    currentUser: null,\r\n    errorMessage: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleAuth = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        setSession({\r\n          isLoggedIn: true,\r\n          currentUser: user,\r\n          errorMessage: null\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      handleAuth();\r\n    };\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut().then(response => {\r\n      setSession({\r\n        isLoggedIn: false,\r\n        currentUser: null\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n      {session.isLoggedIn ? (\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>\r\n            คลิก <code>เข้าสู่หน้าเว็ปไซต์</code> เพื่อทำงานต่อได้เลย\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://trainingqpm1.web.app\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            เข้าสู่หน้าเว็ปไซต์\r\n          </a>\r\n\r\n          <h1>Ahoy!, {session.currentUser && session.currentUser.email}</h1>\r\n\r\n          <button type=\"button\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </header>\r\n      ) : (\r\n        <Login setSession={setSession} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}